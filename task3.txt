Сначала бы протестировал крайние случаи: 
    1. Оба нуля 
        getRandomNumber(0, 0) - Должно выводить либо ошибку, либо 0. А может что-то другое
    2. Без аргументов
        getRandomNumber() - Должно выдавать ошибку, либо то, что задумано программистом, а не останавливать программу

Дальше по несколько раз можно передавать одинаковые аргументы:
    getRandomNumber(1, 5)
    getRandomNumber(1, 5)
    getRandomNumber(1, 5) 
    ...
     
    Чем больше передавать одинаковые аргументы, тем точнее будет результат тестирования, т.к. функция может вернуть одинаковые числа.
    Например какое-то количество раз вызвать: getRandomNumber(-10000, 10000). Так вероятность получить разные числа намного выше, да и функций для проверки можно использовать меньше.

    Все значения вызовов можно, например, передать в массив и сравнить их. Если они все будут равны, то функция возвращает не рандомные значения.
    
    Т. к. вероятность получить одинаковые числа все же есть, нужно её посчитать, учитывая какое число возвращается (целое или дробное). Возможно, стоит учитывать, что, например, 2 числа могут совпадать.
    Учитывать это или нет зависит от верятности получения одинаковых чисел (то есть, от того, на сколько большие числа передаются в аргументы функции).

    И все же, думаю, стоит просто передать несоклько раз большие аргументы и, если  не все одинаковые, то функция работает правильно.
    
